openapi: 3.0.0

info:
  title: Eshop API
  description: API pro správu eshopu s podporou OIDC
  version: 1.1.1

servers:
  - url: https://eshop.example.com/v1

components:
  securitySchemes:
    OIDC:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://auth.example.com/oauth2/authorize
          tokenUrl: https://auth.example.com/oauth2/token
          scopes:
            openid: Získání identifikátoru uživatele
            profile: Přístup k uživatelskému profilu
            email: Přístup k uživatelské emailové adrese
            products.read: Čtení seznamu produktů
            products.create: Přidání nového produktu
            products.delete: Smazání produktu
            products.update: Aktualizace produktu
            categories.read: Čtení seznamu kategorií
            categories.create: Přidání nové kategorie
            orders.read: Čtení seznamu objednávek
            orders.create: Vytvoření nové objednávky
            orders.update: Aktualizace objednávky
            payments.create: Vytvoření platby
            clients.read: Čtení seznamu klientů
            clients.create: Přidání nového klienta
            deliveries.schedule: Naplánování doručení
  schemas:
    ProductStatus:
      type: string
      enum:
        - INSTOCK
        - OUTOFSTOCK
        - PREORDER
      example: INSTOCK

    OrderStatus:
      type: string
      enum:
        - PENDING
        - PROCESSING
        - SHIPPED
        - DELIVERED
      example: PENDING

  parameters:
    TraceStateHeader:
      name: tracestate
      in: header
      required: false
      description: "Korelaci žádosti pro sledování toku dat."
      schema:
        type: string

    ClientIPHeader:
      name: X-Client-IP
      in: header
      required: false
      description: "IP adresa klienta, který provádí požadavek."
      schema:
        type: string
        format: ipv4

    IdPath:
      name: id
      in: path
      required: true
      description: ID entity.
      schema:
        type: string
        format: guid
        example: 7e68b0ce-e037-49e6-bf75-7098ac91dfc5

paths:
  /products:
    get:
      tags:
        - products controller
      summary: Získat seznam produktů
      operationId: getProducts
      security:
        - OIDC: [openid, profile, products.read]
      parameters:
        - $ref: "#/components/parameters/TraceStateHeader"
        - $ref: "#/components/parameters/ClientIPHeader"
      responses:
        "200":
          description: Úspěšná odpověď se seznamem produktů
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: guid
                      example: 7e68b0ce-e037-49e6-bf75-7098ac91dfc5
                    name:
                      type: string
                      example: "Produkt A"
                    price:
                      type: number
                      format: float
                      example: 19.99
                    status:
                      $ref: "#/components/schemas/ProductStatus"
    post:
      tags:
        - products controller
      summary: Přidat nový produkt
      operationId: addProduct
      security:
        - OIDC: [openid, profile, products.create]
      parameters:
        - $ref: "#/components/parameters/TraceStateHeader"
        - $ref: "#/components/parameters/ClientIPHeader"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Nový Produkt"
                price:
                  type: number
                  format: float
                  example: 29.99
                status:
                  $ref: "#/components/schemas/ProductStatus"
      responses:
        "201":
          description: Produkt byl úspěšně přidán.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: "7e68b0ce-e037-49e6-bf75-7098ac91dfc5"
                  name:
                    type: string
                    example: "Nový Produkt"
                  price:
                    type: number
                    format: float
                    example: 29.99
                  status:
                    $ref: "#/components/schemas/ProductStatus"
        "400":
          description: Chybný požadavek.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Chybí povinné pole 'name'."

  /products/{id}:
    get:
      tags:
        - products controller
      summary: Získat detail produktu podle ID.
      operationId: getProductById
      parameters:
        - $ref: "#/components/parameters/IdPath"
        - $ref: "#/components/parameters/TraceStateHeader"
        - $ref: "#/components/parameters/ClientIPHeader"
      security:
        - OIDC: [openid, profile, products.read]
      responses:
        "200":
          description: Úspěšná odpověď s detaily produktu.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: guid
                    example: 7e68b0ce-e037-49e6-bf75-7098ac91dfc5
                  name:
                    type: string
                    example: "Produkt A"
                  price:
                    type: number
                    format: float
                    example: 19.99
                  status:
                    $ref: "#/components/schemas/ProductStatus"
        "404":
          description: Produkt nenalezen.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Produkt s ID 1 nebyl nalezen."

    put:
      tags:
        - products controller
      summary: Aktualizovat produkt podle ID.
      operationId: updateProduct
      parameters:
        - $ref: "#/components/parameters/IdPath"
        - $ref: "#/components/parameters/TraceStateHeader"
        - $ref: "#/components/parameters/ClientIPHeader"
      security:
        - OIDC: [openid, profile, products.update]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Aktualizovaný Produkt"
                price:
                  type: number
                  format: float
                  example: 25.99
                status:
                  $ref: "#/components/schemas/ProductStatus"
      responses:
        "200":
          description: Produkt byl úspěšně aktualizován.
        "404":
          description: Produkt nenalezen.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Produkt s ID 1 nebyl nalezen."
    delete:
      tags:
        - products controller
      summary: Smazat produkt podle ID.
      operationId: deleteProduct
      parameters:
        - $ref: "#/components/parameters/IdPath"
        - $ref: "#/components/parameters/TraceStateHeader"
        - $ref: "#/components/parameters/ClientIPHeader"
      security:
        - OIDC: [openid, profile, products.delete]
      responses:
        "204":
          description: Produkt byl úspěšně smazán.
        "404":
          description: Produkt nenalezen.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Produkt s ID 1 nebyl nalezen."
  /categories:
    get:
      tags:
        - categories controller
      summary: Získat seznam kategorií
      operationId: getCategories
      security:
        - OIDC: [openid, profile, categories.read]
      parameters:
        - $ref: "#components/parameters/TraceStateHeader"
        - $ref: "#components/parameters/ClientIPHeader"
      responses:
        "200":
          description: Úspěšná odpověď se seznamem kategorií
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: "Kategorie A"
        "401":
          description: Neautorizovaný přístup
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Neplatný token"
    post:
      tags:
        - categories controller
      summary: Přidat novou kategorii
      operationId: addCategory
      security:
        - OIDC: [openid, profile, categories.create]
      parameters:
        - $ref: "#components/parameters/TraceStateHeader"
        - $ref: "#components/parameters/ClientIPHeader"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: "Nová Kategorie"
      responses:
        "201":
          description: Kategorie byla úspěšně přidána.
        "400":
          description: Chybný požadavek.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Chybí povinné pole 'name'."
  /orders:
    get:
      tags:
        - orders controller
      summary: Získat seznam objednávek
      operationId: getOrders
      security:
        - OIDC: [openid, profile, orders.read]
      parameters:
        - $ref: "#components/parameters/TraceStateHeader"
        - $ref: "#components/parameters/ClientIPHeader"
      responses:
        "200":
          description: Úspěšná odpověď se seznamem objednávek
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: guid
                      example: 7e68b0ce-e037-49e6-bf75-7098ac91dfc5
                    totalPrice:
                      type: number
                      format: float
                      example: 19.99
                    status:
                      type: string
                      example: "Zpracováno"
    post:
      tags:
        - orders controller
      summary: Přidat novou objednávku
      operationId: createOrder
      security:
        - OIDC: [openid, profile, orders.create]
      parameters:
        - $ref: "#components/parameters/TraceStateHeader"
        - $ref: "#components/parameters/ClientIPHeader"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productIds:
                  type: array
                  items:
                    type: integer
                  example: [1, 2, 3]
                quantities:
                  type: array
                  items:
                    type: number
                    example: [2]
      responses:
        "201":
          description: Objednávka byla úspěšně vytvořena.
        "400":
          description: Chybný požadavek.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Chybí povinné pole 'productIds'."
  /orders/{id}:
    get:
      tags:
        - orders controller
      summary: Získat detail objednávky podle ID
      operationId: getOrderById
      parameters:
        - $ref: "#/components/parameters/IdPath"
        - $ref: "#/components/parameters/TraceStateHeader"
        - $ref: "#/components/parameters/ClientIPHeader"
      security:
        - OIDC: [openid, profile, orders.read]
      responses:
        "200":
          description: Úspěšná odpověď s detaily objednávky
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: guid
                    example: 7e68b0ce-e037-49e6-bf75-7098ac91dfc5
                  totalPrice:
                    type: integer
                    example: 1
                  status:
                    type: string
                    example: "Zpracováno"
        "404":
          description: Objednávka nenalezena.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Objednávka s ID 125125 nebyla nalezena"

  /clients:
    get:
      tags:
        - clients controller
      summary: Získat seznam klientů
      operationId: getClients
      security:
        - OIDC: [openid, profile, clients.read]
      parameters:
        - $ref: "#components/parameters/TraceStateHeader"
        - $ref: "#components/parameters/ClientIPHeader"
      responses:
        "200":
          description: Úspěšná odpověď se seznamem klientů
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: guid
                      example: 7e68b0ce-e037-49e6-bf75-7098ac91dfc5
                    email:
                      type: string
                      example: "client@example.com"
    post:
      tags:
        - clients controller
      summary: Přidat nového klienta
      operationId: addClient
      security:
        - OIDC: [openid, profile, clients.create]
      parameters:
        - $ref: "#components/parameters/TraceStateHeader"
        - $ref: "#components/parameters/ClientIPHeader"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "newclient@example.com"
      responses:
        "201":
          description: Klient byl úspěšně přidán.
        "400":
          description: Chybný požadavek.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Chybí povinné pole 'email'."

  /payments:
    post:
      tags:
        - payments controller
      summary: Vytvořit platbu
      operationId: createPayment
      security:
        - OIDC: [openid, profile, payments.create]
      parameters:
        - $ref: "#components/parameters/TraceStateHeader"
        - $ref: "#components/parameters/ClientIPHeader"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId:
                  type: string
                  format: guid
                  example: "7e68b0ce-e037-49e6-bf75-7098ac91dfc5"
                method:
                  type: string
                  example: "credit_card"
                amount:
                  type: number
                  format: float
                  example: 100.00
      responses:
        "201":
          description: Platba byla úspěšně vytvořena.
        "400":
          description: Chybný požadavek.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Chybí povinné pole 'orderId'."
  /deliveries:
    post:
      tags:
        - deliveries controller
      summary: Naplánovat doručení
      operationId: scheduleDelivery
      security:
        - OIDC: [openid, profile, deliveries.schedule]
      parameters:
        - $ref: "#components/parameters/TraceStateHeader"
        - $ref: "#components/parameters/ClientIPHeader"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orderId:
                  type: string
                  format: guid
                  example: "7e68b0ce-e037-49e6-bf75-7098ac91dfc5"
                deliveryDate:
                  type: string
                  format: date
                  example: "2023-10-01"
      responses:
        "201":
          description: Doručení bylo úspěšně naplánováno.
        "400":
          description: Chybný požadavek.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Chybí povinné pole 'orderId'."
